/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.hospital;

import Hospital.City;
import Hospital.CityDirectory;
import Hospital.Community;
import Hospital.Hospital;
import Hospital.HospitalDirectory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author hetal
 */
public class AddHospitalInfoJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddHospitalInfoJPanel
     */
    
    JPanel mainWorkArea;
    CityDirectory cityDirectory;
    
    AddHospitalInfoJPanel(JPanel mainWorkArea, CityDirectory cityDirectory) {
        initComponents();
        this.mainWorkArea = mainWorkArea;
        this.cityDirectory = cityDirectory;
        //populateCityCombo();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSelectCity = new javax.swing.JLabel();
        lblSelectCommunity = new javax.swing.JLabel();
        cmbSelectCommunity = new javax.swing.JComboBox<>();
        lblHospitalName = new javax.swing.JLabel();
        txtHospitalName = new javax.swing.JTextField();
        lblPincode = new javax.swing.JLabel();
        txtPincode = new javax.swing.JTextField();
        lblHospitalAdd = new javax.swing.JLabel();
        txtHospitalAddress = new javax.swing.JTextField();
        lblCreateHospital = new javax.swing.JLabel();
        btnSaveHospital = new javax.swing.JButton();
        cmbSelectCityy = new javax.swing.JComboBox<>();

        lblSelectCity.setText("Select City:");

        lblSelectCommunity.setText("Select Community:");

        cmbSelectCommunity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbSelectCommunity.setSelectedIndex(-1);

        lblHospitalName.setText("Hospital Name:");

        lblPincode.setText("Pincode:");

        lblHospitalAdd.setText("Hospital Address:");

        lblCreateHospital.setText("CREATE HOSPITAL DETAILS");

        btnSaveHospital.setText("SAVE");
        btnSaveHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveHospitalActionPerformed(evt);
            }
        });

        cmbSelectCityy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbSelectCityy.setSelectedIndex(-1);
        cmbSelectCityy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSelectCityyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblSelectCity)
                                .addComponent(lblHospitalName)
                                .addComponent(lblPincode)
                                .addComponent(lblHospitalAdd))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblSelectCommunity)
                                .addGap(15, 15, 15)))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbSelectCommunity, 0, 280, Short.MAX_VALUE)
                            .addComponent(txtHospitalName)
                            .addComponent(txtPincode)
                            .addComponent(txtHospitalAddress)
                            .addComponent(cmbSelectCityy, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(291, 291, 291)
                        .addComponent(lblCreateHospital))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(314, 314, 314)
                        .addComponent(btnSaveHospital)))
                .addContainerGap(235, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lblCreateHospital)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSelectCity)
                    .addComponent(cmbSelectCityy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSelectCommunity)
                    .addComponent(cmbSelectCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHospitalName)
                    .addComponent(txtHospitalName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHospitalAdd)
                    .addComponent(txtHospitalAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPincode)
                    .addComponent(txtPincode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addComponent(btnSaveHospital)
                .addGap(80, 80, 80))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveHospitalActionPerformed
        // TODO add your handling code here:
        
        int pincode;
        Hospital hospitalDemographics= new Hospital();
        if(((City) cmbSelectCityy.getSelectedItem())==null){
           JOptionPane.showMessageDialog(this, "City not present", "Info", JOptionPane.WARNING_MESSAGE);
            return; 
        }
        if(((Community) cmbSelectCommunity.getSelectedItem())==null){
           JOptionPane.showMessageDialog(this, "Community not present int he city", "Info", JOptionPane.WARNING_MESSAGE);
            return; 
            
        }
        
        if (ValidFields()) {
            
         try{
            pincode= Integer.parseInt(txtPincode.getText());
            }
         catch(NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Please check the pincode data", "Info", JOptionPane.INFORMATION_MESSAGE);
                return;
         }
         if (!(txtHospitalName.getText().matches("^[a-zA-Z]*$"))) {
                JOptionPane.showMessageDialog(this, "Please enter valid Hospital name. Hospital Name can only contain alphabets", "Info", JOptionPane.INFORMATION_MESSAGE);
                return;
                
        }
         hospitalDemographics.setHospital_Name(txtHospitalName.getText());
         hospitalDemographics.setPincode(pincode);
         hospitalDemographics.setAddress(txtHospitalAddress.getText());
         hospitalDemographics.setCity(cmbSelectCityy.getSelectedItem().toString());
         hospitalDemographics.setCommunity(cmbSelectCommunity.getSelectedItem().toString());
         JOptionPane.showMessageDialog(this, "Hospital demographics added");
        }
    }//GEN-LAST:event_btnSaveHospitalActionPerformed

    private void cmbSelectCityyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSelectCityyActionPerformed
        // TODO add your handling code here:
        populateCommunityCombo();
    }//GEN-LAST:event_cmbSelectCityyActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSaveHospital;
    private javax.swing.JComboBox<String> cmbSelectCityy;
    private javax.swing.JComboBox<String> cmbSelectCommunity;
    private javax.swing.JLabel lblCreateHospital;
    private javax.swing.JLabel lblHospitalAdd;
    private javax.swing.JLabel lblHospitalName;
    private javax.swing.JLabel lblPincode;
    private javax.swing.JLabel lblSelectCity;
    private javax.swing.JLabel lblSelectCommunity;
    private javax.swing.JTextField txtHospitalAddress;
    private javax.swing.JTextField txtHospitalName;
    private javax.swing.JTextField txtPincode;
    // End of variables declaration//GEN-END:variables

    private void populateCityCombo() {
        
        cmbSelectCityy.removeAllItems();
        for(City c: cityDirectory.getCities()){
            cmbSelectCityy.addItem(c.toString());
        }
    }
    
    private void populateCommunityCombo() {
        cmbSelectCommunity.removeAllItems();
        if (cmbSelectCityy.getSelectedItem() != null) {
            for (Community s : ((City) cmbSelectCityy.getSelectedItem()).getCityData().getCommunities()) {
                cmbSelectCommunity.addItem(s.toString());
            }
        }
    }

    private boolean ValidFields() {
        if(!validField(txtHospitalName,"Please Enter Hospital Name")){
            return false;
           
        }
        else if(!validField(txtHospitalAddress,"Please Enter Hospital Address")){
            return false;
        }
        else if(!validField(txtPincode,"Please Enter Pincode")){
            return false;
        }
        return true;
    }

    private boolean validField(JTextField fieldName, String errorMsg) {
        if (fieldName.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(this, errorMsg);
            return false;
        }
        return true;
    }
}
