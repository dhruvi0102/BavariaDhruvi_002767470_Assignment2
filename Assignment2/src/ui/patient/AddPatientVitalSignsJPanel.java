/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.patient;

import java.awt.Image;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import Hospital.City;
import Hospital.CityDirectory;
import Hospital.EncounterHistory;
import Hospital.Patient;
import Hospital.PatientDirectory;
import Hospital.Person;
import Hospital.PersonDirectory;
import Hospital.VitalSigns;

/**
 *
 * @author dhruv
 */
public class AddPatientVitalSignsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddPatientVitalSignsJPanel
     */
    JPanel workAreaJPanel;
    CityDirectory cityDirectory;
    PatientDirectory patientDirectory;
    Patient patientInfo;
//    public AddPatientVitalSignsJPanel() {
//        initComponents();
//    }

    AddPatientVitalSignsJPanel(JPanel workAreaJPanel, CityDirectory cityDirectory, PatientDirectory patientDirectory) {
        initComponents();
        this.workAreaJPanel = workAreaJPanel;
        this.cityDirectory = cityDirectory;
        this.patientDirectory = patientDirectory;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtPulse = new javax.swing.JTextField();
        txtPressure = new javax.swing.JTextField();
        lblDateErr = new javax.swing.JLabel();
        lblPulse = new javax.swing.JLabel();
        txtTemperature = new javax.swing.JTextField();
        lblPulseErr = new javax.swing.JLabel();
        lblBPErr = new javax.swing.JLabel();
        lblTempErr = new javax.swing.JLabel();
        lblTemperature = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        lblPressure = new javax.swing.JLabel();
        lblFirstName = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        lblLastName = new javax.swing.JLabel();
        lblSsn = new javax.swing.JLabel();
        txtSsn = new javax.swing.JTextField();
        btnSearchPatient = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        lblPatientPicture = new javax.swing.JLabel();
        txtPatientAge = new javax.swing.JTextField();
        lblPatientAge = new javax.swing.JLabel();

        txtPulse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPulseActionPerformed(evt);
            }
        });
        txtPulse.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPulseKeyReleased(evt);
            }
        });

        txtPressure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPressureActionPerformed(evt);
            }
        });
        txtPressure.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPressureKeyReleased(evt);
            }
        });

        lblDateErr.setForeground(new java.awt.Color(255, 0, 0));

        lblPulse.setText("Pulse");

        txtTemperature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTemperatureActionPerformed(evt);
            }
        });
        txtTemperature.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTemperatureKeyReleased(evt);
            }
        });

        lblPulseErr.setForeground(new java.awt.Color(255, 0, 0));

        lblBPErr.setForeground(new java.awt.Color(255, 0, 0));

        lblTempErr.setForeground(new java.awt.Color(255, 0, 0));

        lblTemperature.setText("Temperature");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblPressure.setText("Blood Pressure");

        lblFirstName.setText("Patient first name");

        txtFirstName.setEnabled(false);
        txtFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFirstNameActionPerformed(evt);
            }
        });
        txtFirstName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFirstNameKeyReleased(evt);
            }
        });

        txtLastName.setEnabled(false);
        txtLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLastNameActionPerformed(evt);
            }
        });
        txtLastName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLastNameKeyReleased(evt);
            }
        });

        lblLastName.setText("Patient last name");

        lblSsn.setText("Enter PersonID");

        txtSsn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSsnActionPerformed(evt);
            }
        });

        btnSearchPatient.setText("Search Patient");
        btnSearchPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchPatientActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Perpetua", 1, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Add patient Vitals");

        lblPatientPicture.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPatientPicture.setText("Patient picture");
        lblPatientPicture.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtPatientAge.setEnabled(false);
        txtPatientAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientAgeActionPerformed(evt);
            }
        });
        txtPatientAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPatientAgeKeyReleased(evt);
            }
        });

        lblPatientAge.setText("Patient Age");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblPatientPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPatientAge)
                    .addComponent(lblFirstName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblLastName)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSsn, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtSsn, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(btnSearchPatient))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPressure, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblTemperature, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(83, 83, 83)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtFirstName)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtLastName)
                                            .addComponent(txtPatientAge, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(txtTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBPErr, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTempErr, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPulse, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblDateErr, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtPulse, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblPulseErr, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtFirstName, txtLastName, txtPressure, txtPulse, txtTemperature});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblFirstName, lblLastName, lblPressure, lblPulse, lblTemperature});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(lblTitle)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPatientPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSsn)
                            .addComponent(txtSsn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearchPatient))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFirstName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLastName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPatientAge)
                            .addComponent(txtPatientAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTemperature)
                    .addComponent(lblTempErr))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPressure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPressure)
                    .addComponent(lblBPErr))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPulse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPulse)
                    .addComponent(lblPulseErr))
                .addGap(12, 12, 12)
                .addComponent(lblDateErr, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(btnSave)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblFirstName, lblLastName, lblPressure, lblPulse, lblTemperature});

    }// </editor-fold>//GEN-END:initComponents

    private void txtFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstNameActionPerformed

    private void txtFirstNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFirstNameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstNameKeyReleased

    private void txtLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastNameActionPerformed

    private void txtLastNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLastNameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastNameKeyReleased

    private void txtSsnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSsnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSsnActionPerformed

    private void btnSearchPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchPatientActionPerformed
        // TODO add your handling code here:
        Patient patient = PatientDirectory.searchPatient(txtSsn.getText());
        DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
        patientInfo = patient;
        if (patientInfo == null) {
            List<City> cities = cityDirectory.getCities();

            List<Person> people = PersonDirectory.getPeople();
            for (Person person : people) {
                if (txtSsn.getText() == null ? String.valueOf(person.getSocialSecurityNum()) == null : txtSsn.getText().equals(String.valueOf(person.getSocialSecurityNum()))) {
                    patientInfo = new Patient();
                    patientInfo.setSocialSecurityNum(person.getSocialSecurityNum());
                    patientInfo.setFirstName(person.getFirstName());
                    patientInfo.setLastName(person.getLastName());
                    patientInfo.setAddress(person.getAddress());
                    patientInfo.setDob(person.getDob());
                    patientInfo.setAge(person.getAge());
                    patientInfo.setAddress(person.getAddress());
                    patientInfo.setPersonPicture(person.getPersonPicture());
                    txtFirstName.setText(patientInfo.getFirstName());
                    txtLastName.setText(patientInfo.getLastName());
                    //txtPatientDob.setText(dateFormat.format(patientInfo.getDob()));
                    txtPatientAge.setText(String.valueOf(patientInfo.getAge()));
                    lblPatientPicture.setIcon(new ImageIcon(patientInfo.getPersonPicture()));

                    PatientDirectory.addPatient(patientInfo);
                    return;
                }
            }
            if (patientInfo == null) {
                JOptionPane.showMessageDialog(this, "SSN number did not match wth any person", "Info", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            this.patientInfo = patient;
            txtFirstName.setText(patientInfo.getFirstName());
            txtLastName.setText(patientInfo.getLastName());
            //txtPatientDob.setText(dateFormat.format(patientInfo.getDob()));
            txtPatientAge.setText(String.valueOf(patientInfo.getAge()));
            lblPatientPicture.setIcon(new ImageIcon(patientInfo.getPersonPicture()));
        }
    }//GEN-LAST:event_btnSearchPatientActionPerformed

    private void txtPulseKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPulseKeyReleased
        // TODO add your handling code here:
        String agePattern = "\\d{1,3}";
        Pattern patt = Pattern.compile(agePattern);
        Matcher match = patt.matcher(txtPulse.getText());
        if (!match.matches()) {
            lblPulseErr.setText("Incorrect pulse format");
        } else {
            lblPulseErr.setText(null);
        }
    }//GEN-LAST:event_txtPulseKeyReleased

    private void txtPulseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPulseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPulseActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        double temperature;
        double pressure;
        int pulse;
        Date dob;

        if (patientInfo == null) {
            JOptionPane.showMessageDialog(this, "Invalid patient", "Info", JOptionPane.WARNING_MESSAGE);
            return;
        } else if (txtSsn.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(this, "Please check social security number", "Info", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (ValidFields()) {
            try {
                temperature = Double.parseDouble(txtTemperature.getText());
                pressure = Double.parseDouble(txtPressure.getText());
                pulse = Integer.parseInt(txtPulse.getText());
                // dob = txtDate.getDate();
                if (lblPulseErr.getText() != null && lblPulseErr.getText().trim().length() != 0) {
                    JOptionPane.showMessageDialog(this, "Please enter 3 digit pulse rate", "Info", JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Please check the form data", "Info", JOptionPane.INFORMATION_MESSAGE);
                return;
            }

            VitalSigns vs = ((EncounterHistory) patientInfo.getEncounterHistory()).addnewVitals();

            vs.setTemperature(temperature);
            vs.setBloodPressure(pressure);
            vs.setPulse(pulse);

            String pattern = "MM/dd/yyyy";
            DateFormat df = new SimpleDateFormat(pattern);
            //vs.setDate(df.format(dob));

            JOptionPane.showMessageDialog(this, "New Vital Signs added");

            txtTemperature.setText("");
            txtPressure.setText("");
            txtPulse.setText("");
            //txtDate.setDate(null);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtTemperatureKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTemperatureKeyReleased
        // TODO add your handling code here:
        String pattern = "^[-?\\d+(\\.\\d+)?]{0,30}$";
        Pattern patt = Pattern.compile(pattern);
        Matcher match = patt.matcher(txtTemperature.getText());
        if (!match.matches()) {
            lblTempErr.setText("Incorrect temerature format");
        } else {
            lblTempErr.setText(null);
        }
    }//GEN-LAST:event_txtTemperatureKeyReleased

    private void txtTemperatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTemperatureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTemperatureActionPerformed

    private void txtPressureKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPressureKeyReleased
        // TODO add your handling code here:
        String pattern = "^[-?\\d+(\\.\\d+)?]{0,30}$";
        Pattern patt = Pattern.compile(pattern);
        Matcher match = patt.matcher(txtPressure.getText());
        if (!match.matches()) {
            lblBPErr.setText("Incorrect blood pressure format");
        } else {
            lblBPErr.setText(null);
        }
    }//GEN-LAST:event_txtPressureKeyReleased

    private void txtPressureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPressureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPressureActionPerformed

    private void txtPatientAgeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPatientAgeKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientAgeKeyReleased

    private void txtPatientAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientAgeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearchPatient;
    private javax.swing.JLabel lblBPErr;
    private javax.swing.JLabel lblDateErr;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblPatientAge;
    private javax.swing.JLabel lblPatientPicture;
    private javax.swing.JLabel lblPressure;
    private javax.swing.JLabel lblPulse;
    private javax.swing.JLabel lblPulseErr;
    private javax.swing.JLabel lblSsn;
    private javax.swing.JLabel lblTempErr;
    private javax.swing.JLabel lblTemperature;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtPatientAge;
    private javax.swing.JTextField txtPressure;
    private javax.swing.JTextField txtPulse;
    private javax.swing.JTextField txtSsn;
    private javax.swing.JTextField txtTemperature;
    // End of variables declaration//GEN-END:variables
    private boolean ValidFields() {
        if (!validField(txtTemperature, "Please enter the temperature")) {
            return false;
        } else if (!validField(txtPressure, "Please enter the blood pressure")) {
            return false;
        } else if (!validField(txtPulse, "Please enter the pulse")) {
            return false;
        }
        return true;
    }

    private boolean validField(JTextField fieldName, String errorMsg) {
        if (fieldName.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(this, errorMsg);
            return false;
        }
        return true;
    }
}
