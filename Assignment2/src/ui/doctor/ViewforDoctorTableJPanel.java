/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.doctor;

import Hospital.CityDirectory;
import Hospital.Doctor;
import Hospital.DoctorDirectory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author dhruv
 */
public class ViewforDoctorTableJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewforDoctorTableJPanel
     */
    JPanel workAreaJPanel;
    CityDirectory cityDirectory;
    DoctorDirectory doctorDirectory;
    
    public ViewforDoctorTableJPanel(JPanel workAreaJPanel, CityDirectory cityDirectory, DoctorDirectory doctorDirectory) {
        initComponents();
        this.workAreaJPanel = workAreaJPanel;
        this.cityDirectory = cityDirectory;
        this.doctorDirectory = doctorDirectory;
        populateTableRows();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_View = new javax.swing.JButton();
        btn_Update = new javax.swing.JButton();
        btn_Delete = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        DoctorTable1 = new javax.swing.JTable();
        txt_Speciality = new javax.swing.JTextField();
        lblCommunity = new javax.swing.JLabel();
        lblLastName = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        txt_Hospital = new javax.swing.JTextField();
        txtFirstName = new javax.swing.JTextField();
        lblFirstName = new javax.swing.JLabel();
        lblHospital = new javax.swing.JLabel();
        lblPatientAge = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        lblCity = new javax.swing.JLabel();
        lblSpeciality = new javax.swing.JLabel();
        txtSsn = new javax.swing.JTextField();
        lblSsn = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        txtCommunity = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 204, 255));

        btn_View.setForeground(new java.awt.Color(0, 102, 102));
        btn_View.setText("View");
        btn_View.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ViewActionPerformed(evt);
            }
        });

        btn_Update.setForeground(new java.awt.Color(0, 102, 102));
        btn_Update.setText("Update");
        btn_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_UpdateActionPerformed(evt);
            }
        });

        btn_Delete.setForeground(new java.awt.Color(0, 102, 102));
        btn_Delete.setText("Delete");
        btn_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DeleteActionPerformed(evt);
            }
        });

        DoctorTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Hospital", "FirstName", "LastName", "Age", "SSN", "Speciality", "Community"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(DoctorTable1);

        txt_Speciality.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_SpecialityActionPerformed(evt);
            }
        });
        txt_Speciality.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_SpecialityKeyReleased(evt);
            }
        });

        lblCommunity.setForeground(new java.awt.Color(0, 102, 102));
        lblCommunity.setText("Community");

        lblLastName.setForeground(new java.awt.Color(0, 102, 102));
        lblLastName.setText("Last Name");

        txtLastName.setEnabled(false);
        txtLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLastNameActionPerformed(evt);
            }
        });
        txtLastName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLastNameKeyReleased(evt);
            }
        });

        txt_Hospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_HospitalActionPerformed(evt);
            }
        });
        txt_Hospital.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_HospitalKeyReleased(evt);
            }
        });

        txtFirstName.setEnabled(false);
        txtFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFirstNameActionPerformed(evt);
            }
        });
        txtFirstName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFirstNameKeyReleased(evt);
            }
        });

        lblFirstName.setForeground(new java.awt.Color(0, 102, 102));
        lblFirstName.setText("First Name");

        lblHospital.setForeground(new java.awt.Color(0, 102, 102));
        lblHospital.setText("Hospital");

        lblPatientAge.setForeground(new java.awt.Color(0, 102, 102));
        lblPatientAge.setText("Age");

        txtAge.setEnabled(false);
        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });
        txtAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAgeKeyReleased(evt);
            }
        });

        lblCity.setForeground(new java.awt.Color(0, 102, 102));
        lblCity.setText("City");

        lblSpeciality.setForeground(new java.awt.Color(0, 102, 102));
        lblSpeciality.setText("Speciality");

        txtSsn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSsnActionPerformed(evt);
            }
        });

        lblSsn.setForeground(new java.awt.Color(0, 102, 102));
        lblSsn.setText("Enter SSN");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSsn, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFirstName)
                            .addComponent(lblLastName)
                            .addComponent(lblSpeciality)
                            .addComponent(lblHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPatientAge)
                            .addComponent(lblCity)
                            .addComponent(lblCommunity))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtLastName, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                            .addComponent(txtSsn, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                            .addComponent(txtAge, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                            .addComponent(txtFirstName, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                            .addComponent(txt_Hospital)
                            .addComponent(txt_Speciality, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                            .addComponent(txtCity)
                            .addComponent(txtCommunity))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 702, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_View)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_Update)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_Delete)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_View)
                    .addComponent(btn_Update)
                    .addComponent(btn_Delete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSsn)
                    .addComponent(txtSsn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFirstName)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLastName)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPatientAge))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSpeciality)
                    .addComponent(txt_Speciality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHospital)
                    .addComponent(txt_Hospital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCommunity)
                    .addComponent(txtCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_ViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ViewActionPerformed
        // TODO add your handling code here:
        int selectedRowInd = DoctorTable1.getSelectedRow();
        if (selectedRowInd < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view/update.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) DoctorTable1.getModel();
        Doctor selectedEmployee = (Doctor) model.getValueAt(selectedRowInd, 0);

        txtSsn.setText(String.valueOf(selectedEmployee.getSocialSecurityNum()));
        txtFirstName.setText(String.valueOf(selectedEmployee.getFirstName()));
        txtLastName.setText(String.valueOf(selectedEmployee.getLastName()));
        txtAge.setText(String.valueOf(selectedEmployee.getAge()));
        txt_Speciality.setText(String.valueOf(selectedEmployee.getSpeciality()));
        txt_Hospital.setText(String.valueOf(selectedEmployee.getHospital()));
        txtCity.setText(String.valueOf(selectedEmployee.getDocCity()));
        txtCommunity.setText(String.valueOf(selectedEmployee.getDocCommunity()));
        //txtEmail.setText(String.valueOf(selectedEmployee.getEmail()));*/
    }//GEN-LAST:event_btn_ViewActionPerformed

    private void txt_SpecialityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_SpecialityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_SpecialityActionPerformed

    private void txt_SpecialityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_SpecialityKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_txt_SpecialityKeyReleased

    private void txtLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastNameActionPerformed

    private void txtLastNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLastNameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastNameKeyReleased

    private void txt_HospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_HospitalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_HospitalActionPerformed

    private void txt_HospitalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_HospitalKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_txt_HospitalKeyReleased

    private void txtFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstNameActionPerformed

    private void txtFirstNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFirstNameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstNameKeyReleased

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    private void txtAgeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgeKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeKeyReleased

    private void txtSsnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSsnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSsnActionPerformed

    private void btn_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_UpdateActionPerformed
        // TODO add your handling code here:
        if (DoctorTable1.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to update.");
            return;
        }
        String SSN = txtSsn.getText();
        String FirstName = txtFirstName.getText();
        String LastName = txtLastName.getText();
        int Age = Integer.parseInt(txtAge.getText());
        String speciality = txt_Speciality.getText();
        String Hospital = txt_Hospital.getText();
        String Community = txtCommunity.getText();
        //String City = txtCity.getText();

        DefaultTableModel model = (DefaultTableModel) DoctorTable1.getModel();

            //set value back to table
        DoctorTable1.setValueAt(Hospital,DoctorTable1.getSelectedRow(), 0);
        DoctorTable1.setValueAt(FirstName,DoctorTable1.getSelectedRow(), 1);
        DoctorTable1.setValueAt(LastName,DoctorTable1.getSelectedRow(), 2);
        DoctorTable1.setValueAt(Age,DoctorTable1.getSelectedRow(), 3);
        DoctorTable1.setValueAt(SSN,DoctorTable1.getSelectedRow(), 4);
        DoctorTable1.setValueAt(speciality,DoctorTable1.getSelectedRow(), 5);
        DoctorTable1.setValueAt(Community,DoctorTable1.getSelectedRow(), 6);
        //DoctorTable1.setValueAt(Title,DoctorTable1.getSelectedRow(), 7);
                     
            //Update Message display
            JOptionPane.showMessageDialog(this, "Row Successfully Updated!");
 
    }//GEN-LAST:event_btn_UpdateActionPerformed

    private void btn_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DeleteActionPerformed
        // TODO add your handling code here:
         int selectedRowInd = DoctorTable1.getSelectedRow();
        if (selectedRowInd < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) DoctorTable1.getModel();
        // EmployeeDetailsMain selectedEmployee = (EmployeeDetailsMain) model.getValueAt(selectedRowInd,0);
        String selectedEmployee = model.getValueAt(selectedRowInd, 0).toString();
        doctorDirectory.getDoctors().remove(selectedRowInd);
        model.removeRow(selectedRowInd);
        //viewData.deleteData(selectedEmployee);

        JOptionPane.showMessageDialog(this, "Employee details Deleted.");

        txtSsn.setText("");
        txtFirstName.setText("");
        txtLastName.setText("");
        txtAge.setText("");
        txt_Speciality.setText("");
        txt_Hospital.setText("");
        txtCommunity.setText("");
        txtCity.setText("");
    }//GEN-LAST:event_btn_DeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DoctorTable1;
    private javax.swing.JButton btn_Delete;
    private javax.swing.JButton btn_Update;
    private javax.swing.JButton btn_View;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblHospital;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblPatientAge;
    private javax.swing.JLabel lblSpeciality;
    private javax.swing.JLabel lblSsn;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCommunity;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtSsn;
    private javax.swing.JTextField txt_Hospital;
    private javax.swing.JTextField txt_Speciality;
    // End of variables declaration//GEN-END:variables

    private void populateTableRows(){
       DefaultTableModel model = (DefaultTableModel) DoctorTable1.getModel();
        model.setRowCount(0);

        for (Doctor vs : doctorDirectory.getDoctors()) {

            Object[] row = new Object[7];
            row[0] = vs;
            row[1] = vs.getFirstName();
            row[2] = vs.getLastName();
            row[3] = vs.getAge();
            row[4] = vs.getSocialSecurityNum();
            row[5] = vs.getSpeciality();
            row[6] = vs.getdocCommunity();
            if(row[5] != null){
              model.addRow(row);   
            }           
        }
    }
}
