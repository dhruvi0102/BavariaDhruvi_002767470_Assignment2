/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.doctorSearch;

import Hospital.CityDirectory;
import Hospital.Doctor;
import Hospital.DoctorDirectory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author dhruv
 */
public class ViewforDoctorTableJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewforDoctorTableJPanel
     */
    JPanel workAreaJPanel;
    CityDirectory cityDirectory;
    DoctorDirectory doctorDirectory;
    
    public ViewforDoctorTableJPanel(JPanel workAreaJPanel, CityDirectory cityDirectory, DoctorDirectory doctorDirectory) {
        initComponents();
        this.workAreaJPanel = workAreaJPanel;
        this.cityDirectory = cityDirectory;
        this.doctorDirectory = doctorDirectory;
        populateTableRows();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        DoctorTable1 = new javax.swing.JTable();
        lblSearch = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 204, 255));

        DoctorTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Hospital", "FirstName", "LastName", "Age", "SSN", "Speciality", "Community"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(DoctorTable1);

        lblSearch.setText("Search");

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 702, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSearch)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(219, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
        String matchName = txtSearch.getText();
        
        DefaultTableModel model = (DefaultTableModel) DoctorTable1.getModel();
        model.setRowCount(0);
        
        for(Doctor ed: doctorDirectory.getDoctors()) {
            
            String n = String.valueOf(ed.getCommunity());
            
            if(n.equals(matchName)) {
              
                Object[] row = new Object[10];
                
            row[0] = ed;
            row[1] = ed.getFirstName();
            row[2] = ed.getLastName();
            row[3] = ed.getAge();
            row[4] = ed.getSocialSecurityNum();
            row[5] = ed.getSpeciality();
            row[6] = ed.getDocCommunity();
            
            model.addRow(row); 
            //clearing the field
            txtSearch.setText("");
            }
        }
    }//GEN-LAST:event_txtSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DoctorTable1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    private void populateTableRows(){
       DefaultTableModel model = (DefaultTableModel) DoctorTable1.getModel();
        model.setRowCount(0);

        for (Doctor vs : doctorDirectory.getDoctors()) {

            Object[] row = new Object[7];
            row[0] = vs;
            row[1] = vs.getFirstName();
            row[2] = vs.getLastName();
            row[3] = vs.getAge();
            row[4] = vs.getSocialSecurityNum();
            row[5] = vs.getSpeciality();
            row[6] = vs.getdocCommunity();
            if(row[5] != null){
              model.addRow(row);   
            }           
        }
    }
}
